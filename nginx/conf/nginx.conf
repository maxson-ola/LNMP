
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    include conf/conf.d/*.conf; 

    upstream phpupstream1 {
        server php7:9000;
    }    
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root           /usr/share/nginx/html;
            index index.php index.html;
        }
        
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 32 32k;
            fastcgi_pass phpupstream1;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
            include fastcgi_params;
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # server {
    #     listen 80;
    #     server_name localhost;
    #     root /usr/share/nginx/html;;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     charset utf-8;
    #     index index.php index.html;

    #     # Handle PHP requests
    #     location ~ \.php$ {
    #         try_files $uri =404;
    #         fastcgi_split_path_info ^(.+\.php)(/.+)$;
    #         fastcgi_buffer_size 128k;
    #         fastcgi_buffers 32 32k;
    #         fastcgi_pass phpupstream1;
    #         fastcgi_index index.php;
    #         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #         fastcgi_param PATH_INFO $fastcgi_path_info;
    #         fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
    #         include fastcgi_params;
    #     }

    #     # Default location
    #     location / {
    #         try_files $uri $uri/ @rewrite_v6;
    #     }

    #     # Rewrite location
    #     location @rewrite_v6 {
    #         rewrite ^/(.*)$ /index.php?_url=/$1;
    #     }

    #     # Static files handling for CSV/Excel
    #     location ~* \.(csv|xlsx|xls)$ {
    #         root /home/webroot/github/bms-newton-workorder/server/cache;
    #         access_log off;
    #     }

    #     # Static files handling for images, JS, CSS, etc.
    #     location ~* \.(gif|jpg|jpeg|png|swf|xml|js|css|webp)$ {
    #         access_log off;
    #     }

    #     # Specific location for raccoon
    #     location ~ /raccoon/ {
    #         try_files $uri $uri/ /index.html;
    #     }
    # }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
